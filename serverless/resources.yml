Resources:
  AwsServerlessDemoLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AwsServerlessDemoLambdaRole
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [lambda.amazonaws.com]
            Action: ['sts:AssumeRole']
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
      Policies:
        - PolicyName: lamdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource:
                  - "arn:aws:lambda:*:*:function:*"
        - PolicyName: s3Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:ListBucket
                Resource:
                  - "arn:aws:s3:::aws-serverless-demo"
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                Resource:
                  - "arn:aws:s3:::aws-serverless-demo/incoming/*"

  BasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: 'api.assertdevelopments.com'
      BasePath: 'aws-serverless-demo'
      RestApiId: !Ref ApiGatewayRestApi
      Stage: 'dev'
    DependsOn: ["ApiGatewayDeployment${sls:instanceId}"]
